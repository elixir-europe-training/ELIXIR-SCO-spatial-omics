name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches:
      - main
      - 62-add-container-images-to-sib-dockerhub
      - 51-manage-environments
    paths:
      - '**/Dockerfile'
      - '.github/workflows/build_push.yml'
      - '**/envs/*.yml'
      - '**/envs/*.txt'

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - context: day_1/practical_0
          #   tag: practical_0
          #   ide: jupyter
          - context: day_1/practical_1
            tag: practical_1
            ide: jupyter
          # - context: day_2/practical_2
          #   tag: practical_2
          #   ide: jupyter
          - context: day_2/practical_3
            tag: practical_3
            ide: jupyter
          - context: day_3/practical_4
            tag: practical_4
            ide: jupyter
          - context: day_3/practical_5
            tag: practical_5
            ide: rstudio
          - context: day_4/practical_6
            tag: practical_6
            ide: jupyter

    steps:

      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

        # Free disk space on the runner
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false

      # Step 2: Set up Docker Buildx (enables multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: |
          echo "Logging into Docker Hub"
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        shell: bash

      # Step 5: Build and push Docker image to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.context }}
          file: ./docker/${{ matrix.ide }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
              sibswiss/elixir-sco-spatial-omics:${{ matrix.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  